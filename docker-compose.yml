services:
  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    # Using host networking allows node_exporter to easily access /proc, /sys etc.
    network_mode: "host"
    pid: "host"
    restart: always
    command:
      - '--web.listen-address=:9101'
    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro"

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: always
    hostname: "${HOSTNAME:-$(hostname)}"
    environment:
      # Instance identification and connection
      - MAIN_INSTANCE_PRIVATE_IP=${MAIN_INSTANCE_PRIVATE_IP}
      - HOSTNAME=${HOSTNAME:-$(hostname)}
      - FRIENDLY_NAME=${FRIENDLY_NAME:-${HOSTNAME}}
      - NODE_TYPE=${NODE_TYPE:-unknown}
      - NODE_ENV=${NODE_ENV:-unknown}
      
      # Container pattern matching
      # Examples of pattern combinations:
      #   Single container:    node-app
      #   Multiple patterns:   app.*|node.*|express.*
      #   Exact match:        my-exact-container-name
      #   Wildcard match:     *-node-*
      - WEBAPP_CONTAINER_PATTERN=${WEBAPP_CONTAINER_PATTERN:-}
      - WEBSERVER_CONTAINER_PATTERN=${WEBSERVER_CONTAINER_PATTERN:-}
      - DATABASE_CONTAINER_PATTERN=${DATABASE_CONTAINER_PATTERN:-}
      
      # Service ports for labeling
      # Examples:
      #   Node.js apps:     3000-3999
      #   Web servers:      80,443,8080,8443
      #   Databases:        27017,5432,3306
      - WEBAPP_PORT=${WEBAPP_PORT:-}
      - WEBSERVER_PORT=${WEBSERVER_PORT:-}
      - DATABASE_PORT=${DATABASE_PORT:-}

      # Webserver log configuration
      - WEBSERVER_LOG_PATH=${WEBSERVER_LOG_PATH:-/var/log/webserver}
      - WEBSERVER_LOG_VOLUME=${WEBSERVER_LOG_VOLUME:-webserver-logs}
      
      # Custom container definitions
      # Format: "PATTERN|APP|SERVICE|PORT"
      # Examples:
      #   Redis:          "redis.*|cache|redis|6379"
      #   Elasticsearch:  "elastic.*|search|elasticsearch|9200"
      #   RabbitMQ:      "rabbitmq.*|queue|rabbitmq|5672"
      #   Prometheus:     "prometheus.*|monitoring|prometheus|9090"
      - CUSTOM_CONTAINER_1=${CUSTOM_CONTAINER_1:-}
      - CUSTOM_CONTAINER_2=${CUSTOM_CONTAINER_2:-}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/var/log:/var/log:ro"
      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
      - "./promtail-config.yaml:/etc/promtail/promtail.yaml:ro"
      - "promtail-positions:/tmp"
      - "webserver-logs:${WEBSERVER_LOG_PATH:-/var/log/webserver}:ro"
    command:
      - -config.file=/etc/promtail/promtail.yaml
      - -config.expand-env=true

  ping-agent:
    image: alpine
    container_name: ping_agent
    restart: always
    environment:
      - MAIN_INSTANCE_PRIVATE_IP=${MAIN_INSTANCE_PRIVATE_IP}
    command: sh -c "while true; do ping -c 1 ${MAIN_INSTANCE_PRIVATE_IP} && sleep 60; done"

volumes:
  promtail-positions:
    # Using a named volume for positions file to persist across restarts
  webserver-logs:
    name: "${WEBSERVER_LOG_VOLUME}"
    external: true # Volume managed externally
