# .env.template
# Copy this file to .env and update variables accordingly.

# The private IP address of your main logging instance (Loki/Grafana)
# This should be the private IP of your reverse proxy that handles authentication
MAIN_INSTANCE_PRIVATE_IP=<your-main-instance-private-ip>

# Container name patterns for log collection
# These patterns are used to identify and label container logs
# Use | to separate multiple patterns for the same type
# You can use regex patterns (e.g., "app.*|.*node.*" matches any container with "app" or "node")

# Examples for different setups:

# 1. Standard Node.js + Web Server Setup (uncomment and modify as needed)
# WEBAPP_CONTAINER_PATTERN=pnm-server-app|node-app.*|.*express.*
# WEBSERVER_CONTAINER_PATTERN=.*reverse_proxy.*|caddy.*|nginx.*|traefik.*
# WEBAPP_PORT=3001
# WEBSERVER_PORT=8443

# 2. MongoDB Setup (uncomment and modify as needed)
# DATABASE_CONTAINER_PATTERN=mongodb|mongo.*|.*db.*
# DATABASE_PORT=27117

# 3. Development Setup with Multiple Apps (uncomment and modify as needed)
# WEBAPP_CONTAINER_PATTERN=app.*|.*node.*|.*express.*
# WEBSERVER_CONTAINER_PATTERN=.*proxy.*|caddy.*|nginx.*|traefik.*
# DATABASE_CONTAINER_PATTERN=mongo.*|postgres.*|mysql.*
# WEBAPP_PORT=3000
# WEBSERVER_PORT=443
# DATABASE_PORT=27017

# Current Production Setup
WEBAPP_CONTAINER_PATTERN=pnm-server-app
WEBSERVER_CONTAINER_PATTERN=loki-stack-grafana_reverse_proxy
DATABASE_CONTAINER_PATTERN=mongodb
WEBAPP_PORT=3001
WEBSERVER_PORT=8443
DATABASE_PORT=27117

# Optional: Custom patterns for other containers
# Format: NAME_PATTERN|LABEL_APP|LABEL_SERVICE|PORT
# Examples:

# Redis cache container
# CUSTOM_CONTAINER_1="redis.*|cache|redis|6379"

# Elasticsearch container
# CUSTOM_CONTAINER_2="elastic.*|search|elasticsearch|9200"

# Message queue container
# CUSTOM_CONTAINER_1="rabbitmq.*|queue|rabbitmq|5672"

# Monitoring container
# CUSTOM_CONTAINER_2="prometheus.*|monitoring|prometheus|9090"

